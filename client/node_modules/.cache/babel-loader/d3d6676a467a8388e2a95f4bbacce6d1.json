{"ast":null,"code":"import { takeLatest, all, call, put } from \"@redux-saga/core/effects\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SignInError, signOutSuccess, signOutError, signUpError } from \"./userAction\";\nimport { CHECK_USER_SESSION, EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START, SIGN_OUT_START, SIGN_UP_START } from './userActionTypes';\nexport function* getSnapshotFromAuth(userAuth, extraData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, extraData);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInError(error.message));\n  }\n} // singn in with google\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); // signing in the new user \n\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(SignInError(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n} //sigin in with emaail and password\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(SignInError(error.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n} // checking for user session\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromAuth(userAuth);\n  } catch (error) {\n    yield put(SignInError(error.message));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n} // sign up with email and password\n\nexport function* signUpWithEmailAndPassword({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromAuth(user, {\n      displayName\n    });\n    console.log('user from auth', user);\n  } catch (error) {\n    yield put(signUpError(error.message));\n  }\n}\nexport function* onSingUpStart() {\n  yield takeLatest(SIGN_UP_START, signUpWithEmailAndPassword);\n} // sign out \n\nexport function* singOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutError(error.message));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, singOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSingUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/code_along/e-commerce/clothing-club/src/Redux/user/userSagas.js"],"names":["takeLatest","all","call","put","auth","createUserProfileDocument","googleProvider","getCurrentUser","SignInSuccess","SignInError","signOutSuccess","signOutError","signUpError","CHECK_USER_SESSION","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","SIGN_OUT_START","SIGN_UP_START","getSnapshotFromAuth","userAuth","extraData","userRef","userSnapShot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","isUserAuthenticated","onCheckUserSession","signUpWithEmailAndPassword","displayName","createUserWithEmailAndPassword","console","log","onSingUpStart","singOut","signOut","onSignOutStart","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from \"@redux-saga/core/effects\";\r\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.utils\";\r\nimport { SignInSuccess, SignInError, signOutSuccess, signOutError, signUpError } from \"./userAction\";\r\n\r\nimport { CHECK_USER_SESSION, EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START, SIGN_OUT_START, SIGN_UP_START } from './userActionTypes'\r\n\r\nexport function* getSnapshotFromAuth( userAuth, extraData ) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth, extraData);\r\n    const userSnapShot = yield userRef.get();\r\n    yield put(SignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\r\n  } catch (error) {\r\n    yield put(SignInError(error.message))\r\n  }\r\n}\r\n\r\n\r\n\r\n// singn in with google\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    // signing in the new user \r\n    yield getSnapshotFromAuth(user)\r\n  } catch (error) {\r\n    yield put(SignInError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(\r\n    GOOGLE_SIGN_IN_START, \r\n    signInWithGoogle\r\n  )\r\n}\r\n\r\n//sigin in with emaail and password\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password); \r\n    yield getSnapshotFromAuth(user)\r\n  } catch (error) {\r\n    yield put(SignInError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(\r\n    EMAIL_SIGN_IN_START, \r\n    signInWithEmail\r\n  )\r\n}\r\n\r\n// checking for user session\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield call(getCurrentUser);\r\n    if (!userAuth) {\r\n      return;\r\n    }\r\n    yield getSnapshotFromAuth(userAuth);\r\n  } catch(error) {\r\n    yield put(SignInError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\n// sign up with email and password\r\n\r\nexport function* signUpWithEmailAndPassword({ payload: {email, password, displayName} }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromAuth(user, { displayName })\r\n    console.log('user from auth', user)\r\n  } catch(error) {\r\n    yield put(signUpError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onSingUpStart() {\r\n  yield takeLatest(SIGN_UP_START, signUpWithEmailAndPassword)\r\n}\r\n\r\n// sign out \r\n\r\nexport function* singOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess())\r\n  } catch (error) {\r\n    yield put(signOutError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(SIGN_OUT_START, singOut)\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSingUpStart)\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}