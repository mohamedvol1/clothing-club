{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { FETCH_COLLECTIONS_START } from './shopActionTypes';\nimport { firestore, mapCollectionsSnapshotsToNew } from '../../firebase/firebase.utils';\nimport { fetchCollectionsError, fetchCollectionsSuccess } from './shopActions';\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* fetchCollectionsAsync() {\n  yield console.log('pew pew');\n\n  try {\n    const collectionsRef = firestore.collection('collections');\n    const snapshot = yield collectionsRef.get();\n    const collectionsMap = yield call(mapCollectionsSnapshotsToNew, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsError(error.message));\n  }\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/code_along/e-commerce/clothing-club/src/Redux/shop/shopSagas.js"],"names":["takeLatest","call","put","FETCH_COLLECTIONS_START","firestore","mapCollectionsSnapshotsToNew","fetchCollectionsError","fetchCollectionsSuccess","fetchCollectionsStart","fetchCollectionsAsync","console","log","collectionsRef","collection","snapshot","get","collectionsMap","error","message"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AACA,SAASC,SAAT,EAAoBC,4BAApB,QAAwD,+BAAxD;AACA,SAASC,qBAAT,EAAgCC,uBAAhC,QAA+D,eAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMR,UAAU,CACdG,uBADc,EAEdM,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUA,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,cAAc,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,4BAAD,EAA+BS,QAA/B,CAAjC;AACA,UAAMZ,GAAG,CAACK,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACI,qBAAqB,CAACW,KAAK,CAACC,OAAP,CAAtB,CAAT;AACD;AACF","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport { FETCH_COLLECTIONS_START } from './shopActionTypes';\r\nimport { firestore, mapCollectionsSnapshotsToNew } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsError, fetchCollectionsSuccess } from './shopActions';\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  )\r\n}\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('pew pew')\r\n\r\n  try {\r\n    const collectionsRef = firestore.collection('collections'); \r\n    const snapshot = yield collectionsRef.get();\r\n    const collectionsMap = yield call(mapCollectionsSnapshotsToNew, snapshot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap))\r\n  } catch (error) {\r\n    yield put(fetchCollectionsError(error.message))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}