{"ast":null,"code":"import { takeLatest, all, call, put } from \"@redux-saga/core/effects\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nimport { googleSignInError, googleSignInSuccess, emailSignInSuccess, emailSignInError } from \"./userAction\";\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './userActionTypes'; // singn in with google\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInError(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n} //sigin in with emaail and password\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInError(error.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/code_along/e-commerce/clothing-club/src/Redux/user/userSagas.js"],"names":["takeLatest","all","call","put","auth","createUserProfileDocument","googleProvider","googleSignInError","googleSignInSuccess","emailSignInSuccess","emailSignInError","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","error","message","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,0BAA3C;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,QAAkE,+BAAlE;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,kBAAjD,EAAqEC,gBAArE,QAA6F,cAA7F;AAEA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,mBAA1D,C,CAEA;;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,IAAI,CAACW,eAAL,CAAqBT,cAArB,CAAvB;AACA,UAAMU,OAAO,GAAG,MAAMd,IAAI,CAACG,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACK,mBAAmB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACI,iBAAiB,CAACc,KAAK,CAACC,OAAP,CAAlB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMvB,UAAU,CACdY,oBADc,EAEdC,gBAFc,CAAhB;AAID,C,CAED;;AAEA,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMV,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMd,IAAI,CAACG,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACM,kBAAkB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAnB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACO,gBAAgB,CAACW,KAAK,CAACC,OAAP,CAAjB,CAAT;AACD;AACF;AAED,OAAO,UAAUO,kBAAV,GAA+B;AACpC,QAAM7B,UAAU,CACdW,mBADc,EAEda,eAFc,CAAhB;AAID;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CACRC,IAAI,CAACqB,mBAAD,CADI,EAERrB,IAAI,CAAC2B,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, all, call, put } from \"@redux-saga/core/effects\";\r\nimport { auth, createUserProfileDocument, googleProvider,  } from \"../../firebase/firebase.utils\";\r\nimport { googleSignInError, googleSignInSuccess, emailSignInSuccess, emailSignInError } from \"./userAction\";\r\n\r\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './userActionTypes'\r\n\r\n// singn in with google\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider); \r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapShot = yield userRef.get();\r\n    yield put(googleSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\r\n  } catch (error) {\r\n    yield put(googleSignInError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(\r\n    GOOGLE_SIGN_IN_START, \r\n    signInWithGoogle\r\n  )\r\n}\r\n\r\n//sigin in with emaail and password\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password); \r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapShot = yield userRef.get();\r\n    yield put(emailSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\r\n  } catch (error) {\r\n    yield put(emailSignInError(error.message))\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(\r\n    EMAIL_SIGN_IN_START, \r\n    signInWithEmail\r\n  )\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart)\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}