{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\code_along\\\\e-commerce\\\\clothing-club\\\\src\\\\components\\\\SignIn\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SignIn.scss';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { googleSignInStart, emailSignInStart } from '../../Redux/user/userAction';\nimport { connect } from 'react-redux'; // $accent-color: linear-gradient(90deg,#ed145b 0,#7b31f4);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = styled(TextField)({\n  width: '100%',\n  marginBottom: '25px',\n  '& > .MuiFilledInput-root': {\n    borderRadius: '0px',\n    '&:hover:before': {\n      borderBottom: '2px solid #e00bcb !important'\n    }\n  }\n});\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handelChange = event => {\n    const {\n      value,\n      type\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [type]: value\n    });\n  };\n\n  const handelSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in active\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sign-in-title\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signin-form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handelSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-form-email-area\",\n        children: /*#__PURE__*/_jsxDEV(MyComponent, {\n          type: \"email\",\n          id: \"filled-basic1\",\n          label: \"Email\",\n          variant: \"filled\",\n          required: true,\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-form-password-area\",\n        children: /*#__PURE__*/_jsxDEV(MyComponent, {\n          type: \"password\",\n          id: \"filled-basic2\",\n          label: \"password\",\n          variant: \"filled\",\n          required: true,\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note\",\n        children: `register >>`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            marginTop: '30px',\n            borderRadius: '0px',\n            backgroundColor: 'rgba(224, 11, 203, 1)',\n            '&:hover': {\n              backgroundColor: 'black'\n            }\n          },\n          variant: \"contained\",\n          size: \"large\",\n          type: \"submit\",\n          onClick: handelSubmit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            marginTop: '30px',\n            borderRadius: '0px',\n            backgroundColor: '#4285F4',\n            '&:hover': {\n              backgroundColor: 'white',\n              color: 'black',\n              boxShadow: 'inset 0px 0px 0px 2px black',\n              boxSizing: 'border-box'\n            }\n          },\n          variant: \"contained\",\n          size: \"large\",\n          onClick: googleSignInStart,\n          children: \"sign in with google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"D045XLO0s7F/D7nDnuBmlfdiLEY=\");\n\n_c = SignIn;\n\nconst mapDispatchtoProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchtoProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/code_along/e-commerce/clothing-club/src/components/SignIn/SignIn.js"],"names":["React","useState","TextField","Button","styled","googleSignInStart","emailSignInStart","connect","MyComponent","width","marginBottom","borderRadius","borderBottom","SignIn","userCredentials","setCredentials","email","password","handelChange","event","value","type","target","handelSubmit","preventDefault","marginTop","backgroundColor","color","boxShadow","boxSizing","mapDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './SignIn.scss';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/system';\r\n\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../Redux/user/userAction'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// $accent-color: linear-gradient(90deg,#ed145b 0,#7b31f4);\r\nconst MyComponent = styled(TextField)({\r\n  width: '100%',\r\n  marginBottom: '25px',\r\n  '& > .MuiFilledInput-root': {\r\n    borderRadius: '0px',\r\n    '&:hover:before': {\r\n      borderBottom: '2px solid #e00bcb !important',\r\n    } \r\n  }\r\n           \r\n})\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({ email: '', password: '' })\r\n  \r\n  const handelChange = event => {\r\n    const { value, type } = event.target\r\n    setCredentials({ ...userCredentials, [type] : value })\r\n  }\r\n\r\n  const handelSubmit = async event => {\r\n    event.preventDefault();\r\n    const { email, password } = userCredentials\r\n    emailSignInStart(email, password);\r\n  }\r\n\r\n  return (\r\n    <div className='sign-in active'>\r\n      <h1 className='sign-in-title'>Sign in</h1>\r\n      <form \r\n        className=\"signin-form\" \r\n        noValidate \r\n        autoComplete='off'\r\n        onSubmit={handelSubmit}\r\n      >\r\n        <div className='signin-form-email-area'>\r\n          <MyComponent \r\n              type='email'   \r\n              id=\"filled-basic1\" \r\n              label=\"Email\" \r\n              variant=\"filled\"\r\n              required\r\n              onChange={handelChange}\r\n            />\r\n        </div>\r\n        <div className='signin-form-password-area'> \r\n          <MyComponent \r\n            type='password'    \r\n            id=\"filled-basic2\" \r\n            label=\"password\" \r\n            variant=\"filled\"\r\n            required\r\n            onChange={handelChange}\r\n          />\r\n        </div>\r\n        <div className='note'>{`register >>`}</div>\r\n        <div className='signin-form-buttons'>\r\n        <Button\r\n          sx={{\r\n            marginTop: '30px',\r\n            borderRadius: '0px',\r\n            backgroundColor: 'rgba(224, 11, 203, 1)',\r\n            '&:hover': {\r\n              backgroundColor: 'black',\r\n            }\r\n          }}\r\n          variant=\"contained\" \r\n          size=\"large\"\r\n          type='submit'\r\n          onClick={handelSubmit}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Button\r\n          sx={{\r\n            marginTop: '30px',\r\n            borderRadius: '0px',\r\n            backgroundColor: '#4285F4',\r\n            '&:hover': {\r\n              backgroundColor: 'white',\r\n              color: 'black',\r\n              boxShadow: 'inset 0px 0px 0px 2px black',\r\n              boxSizing: 'border-box'\r\n            }\r\n          }}\r\n          variant=\"contained\" \r\n          size=\"large\"\r\n          onClick={googleSignInStart}\r\n        >\r\n          sign in with google\r\n        </Button>        \r\n        </div>     \r\n      </form>\r\n    </div>\r\n  )\r\n  \r\n  \r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchtoProps)(SignIn);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}