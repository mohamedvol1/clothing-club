{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\etc\\\\code_along\\\\e-commerce\\\\clothing-club\\\\client\\\\src\\\\components\\\\SignUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SignUp.scss';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/system';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../Redux/user/userAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = styled(TextField)({\n  width: '100%',\n  marginBottom: '25px',\n  '& > .MuiFilledInput-root': {\n    borderRadius: '0px',\n    '&:hover:before': {\n      borderBottom: '2px solid #e00bcb !important'\n    }\n  }\n});\n\nconst SignIn = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handelChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handelSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = userCredentials;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      signUpStart(email, password, displayName);\n    } catch (error) {\n      console.error('Error in signing up', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"register-title\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handelSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form-name-area\",\n        children: /*#__PURE__*/_jsxDEV(MyComponent, {\n          type: \"text\",\n          name: \"displayName\",\n          id: \"filled-basic3\",\n          label: \"Name\",\n          variant: \"filled\",\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-form-email-area\",\n        children: /*#__PURE__*/_jsxDEV(MyComponent, {\n          type: \"email\",\n          name: \"email\",\n          id: \"filled-basic4\",\n          label: \"Email\",\n          variant: \"filled\",\n          required: true,\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form-password-area\",\n        children: [/*#__PURE__*/_jsxDEV(MyComponent, {\n          type: \"password\",\n          name: \"password\",\n          id: \"filled-basic5\",\n          label: \"password\",\n          variant: \"filled\",\n          required: true,\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyComponent, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          id: \"filled-basic6\",\n          label: \"confirm password\",\n          variant: \"filled\",\n          required: true,\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            marginTop: '30px',\n            borderRadius: '0px',\n            backgroundColor: 'rgba(224, 11, 203, 1)',\n            '&:hover': {\n              backgroundColor: 'black'\n            }\n          },\n          variant: \"contained\",\n          size: \"large\",\n          type: \"submit\",\n          onClick: handelSubmit,\n          children: \"sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"xrj19eOa/IXZj3kHHRjjt9apS1w=\");\n\n_c = SignIn;\n\nconst mapDispatchtoProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchtoProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/etc/code_along/e-commerce/clothing-club/client/src/components/SignUp/SignUp.js"],"names":["React","useState","TextField","Button","styled","connect","signUpStart","MyComponent","width","marginBottom","borderRadius","borderBottom","SignIn","userCredentials","setCredentials","displayName","email","password","confirmPassword","handelChange","event","name","value","target","handelSubmit","preventDefault","alert","error","console","marginTop","backgroundColor","mapDispatchtoProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './SignUp.scss';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/system';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../Redux/user/userAction';\r\n\r\n\r\nconst MyComponent = styled(TextField)({\r\n  width: '100%',\r\n              marginBottom: '25px',\r\n              '& > .MuiFilledInput-root': {\r\n                borderRadius: '0px',\r\n                '&:hover:before': {\r\n                  borderBottom: '2px solid #e00bcb !important',\r\n                } \r\n              }\r\n           \r\n})\r\n\r\n\r\n\r\nconst SignIn = ({ signUpStart }) => {\r\n   \r\n  const [userCredentials, setCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n\r\n  const handelChange = event => {\r\n    const { name, value } = event.target\r\n    setCredentials({ ...userCredentials, [name] : value })\r\n  }\r\n\r\n  const handelSubmit = async event => {\r\n    event.preventDefault();\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      signUpStart(email, password, displayName);\r\n    } catch(error) {\r\n      console.error('Error in signing up',error);\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <div className='register'>\r\n      <h1 className='register-title'>Register</h1>  \r\n      <form \r\n        className=\"register-form\" \r\n        noValidate \r\n        autoComplete='off'\r\n        onSubmit={handelSubmit}\r\n      >\r\n        <div className='register-form-name-area'>\r\n          <MyComponent \r\n            type='text'\r\n            name='displayName'   \r\n            id=\"filled-basic3\" \r\n            label=\"Name\" \r\n            variant=\"filled\"\r\n            onChange={handelChange}\r\n          />\r\n        </div>\r\n        <div className='signin-form-email-area'>\r\n          <MyComponent \r\n              type='email'\r\n              name='email'    \r\n              id=\"filled-basic4\" \r\n              label=\"Email\" \r\n              variant=\"filled\"\r\n              required\r\n              onChange={handelChange}\r\n            />\r\n        </div>\r\n        <div className='register-form-password-area'> \r\n          <MyComponent \r\n            type='password'\r\n            name='password'        \r\n            id=\"filled-basic5\" \r\n            label=\"password\" \r\n            variant=\"filled\"\r\n            required\r\n            onChange={handelChange}\r\n          />\r\n          <MyComponent \r\n            type='password'\r\n            name='confirmPassword'    \r\n            id=\"filled-basic6\" \r\n            label=\"confirm password\" \r\n            variant=\"filled\"\r\n            required\r\n            onChange={handelChange}\r\n          />\r\n        </div>\r\n        <div className='register-form-button'>\r\n        <Button\r\n          sx={{\r\n            marginTop: '30px',\r\n            borderRadius: '0px',\r\n            backgroundColor: 'rgba(224, 11, 203, 1)',\r\n            '&:hover': {\r\n              backgroundColor: 'black',\r\n            }\r\n          }}\r\n          variant=\"contained\" \r\n          size=\"large\"\r\n          type='submit'\r\n          onClick={handelSubmit}\r\n        >\r\n          sign up\r\n        </Button>    \r\n        </div>      \r\n      </form>\r\n              \r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => ({\r\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({ email, password, displayName }))\r\n})\r\n\r\nexport default connect(null, mapDispatchtoProps)(SignIn);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}